#![allow(dead_code)]

use std;
use std::io::Write;

pub fn generate() {
    let vs = [
        115, 32,  356, 101, 346, 97,  111, 116, 105, 361, 351, 110, 114, 350, 360, 46,
        355, 336, 108, 331, 340, 330, 99,  341, 345, 39,  100, 260, 91,  326, 112, 117,
        93,  357, 320, 316, 109, 335, 98,  104, 358, 280, 124, 325, 103, 300, 44,  359,
        121, 310, 107, 10,  102, 348, 84,  290, 49,  306, 347, 265, 353, 270, 349, 256,
        321, 352, 65,  66,  315, 311, 338, 118, 48,  47,  295, 41,  57,  58,  77,  296,
        285, 354, 305, 343, 317, 337, 54,  271, 67,  53,  318, 83,  40,  266, 342, 276,
        319, 75,  333, 329, 52,  257, 106, 324, 323, 50,  286, 45,  68,  55,  51,  56,
        334, 328, 299, 61,  119, 69,  281, 229, 123, 76,  79,  322, 261, 332, 344, 74,
        287, 292, 282, 95,  232, 150, 72,  297, 291, 197, 120, 327, 38,  170, 89,  122,
        86,  215, 195, 314, 90,  82,  275, 141, 70,  42,  262, 258, 87,  188, 175, 37,
        304, 279, 43,  201, 171, 267, 313, 88,  125, 298, 268, 259, 283, 301, 230, 85,
        312, 307, 80,  226, 184, 157, 92,  130, 225, 133, 9,   213, 36,  128, 160, 308,
        233, 178, 182, 302, 264, 289, 263, 288, 284, 293, 277, 208, 129, 138, 309, 78,
        172, 196, 217, 200, 210, 17,  139, 166, 183, 214, 194, 234, 18,  0,   159, 187,
        216, 212, 148, 64,  165, 35,  173, 231, 33,  146, 156, 278, 273, 168, 134, 209,
        274, 153, 164, 71,  131, 179, 154, 96,  137, 136, 163, 59,  339, 161, 162, 143,
        30,  26,  12,  34,  255, 24,  62,  206, 22,  3,   25,  254, 6,   19,  14,  11,
        27,  5,   7,   169, 185, 190, 132, 8,   28,  13,  191, 1,   31,  2,   15,  29,
        144, 204, 174, 294, 142, 147, 207, 211, 126, 269, 73,  239, 23,  113, 176, 140,
        224, 152, 218, 63,  272, 21,  199, 303, 202, 220, 205, 151, 60,  227, 81,  251,
        252, 193, 155, 223, 177, 253, 192, 221, 180, 203, 240, 94,  245, 219, 145, 244,
        149, 186, 249, 242, 158, 236, 246, 238, 243, 198, 16,  228, 135, 250, 241, 235,
        4,   127, 248, 222, 247, 167, 189, 181, 237, 20
    ];
    let fvs_dest_path = std::path::Path::new(&std::env::var("OUT_DIR").unwrap()).join("MTF_VALUE_ARRAY.txt");
    let fis_dest_path = std::path::Path::new(&std::env::var("OUT_DIR").unwrap()).join("MTF_INDEX_ARRAY.txt");
    let fnext_dest_path  = std::path::Path::new(&std::env::var("OUT_DIR").unwrap()).join("MTF_NEXT_ARRAY.txt");
    let mut fvs = std::io::BufWriter::new(std::fs::File::create(&fvs_dest_path).unwrap());
    let mut fis = std::io::BufWriter::new(std::fs::File::create(&fis_dest_path).unwrap());
    let mut fnext  = std::io::BufWriter::new(std::fs::File::create(&fnext_dest_path).unwrap());

    write!(fvs, "{:?}", vs.iter().collect::<Vec<_>>()).unwrap();
    write!(fis, "{:?}", vs.iter().map(|v| vs.iter().position(|i| vs[*i] == *v).unwrap()).collect::<Vec<_>>()).unwrap();
    write!(fnext, "{:?}", (0 .. vs.len())
           .map(|i| std::cmp::min(255, (i as f64 * 0.9999).powf(1.0 - 0.05 * i as f64 / vs.len() as f64) as usize))
           .collect::<Vec<_>>()).unwrap();
}
