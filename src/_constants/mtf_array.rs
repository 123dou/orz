#![allow(dead_code)]

use std;
use std::io::Write;

pub fn generate() {
    let vs = [
        32,  115, 101, 256, 111, 97,  116, 351, 114, 110, 347, 105, 337, 342, 356, 104,
        327, 352, 108, 46,  39,  91,  99,  331, 332, 317, 336, 261, 326, 321, 341, 117,
        93,  109, 100, 322, 44,  98,  112, 346, 301, 124, 102, 107, 338, 316, 291, 10,
        103, 307, 121, 329, 311, 349, 312, 49,  353, 257, 343, 350, 348, 306, 281, 286,
        297, 266, 340, 271, 345, 77,  70,  84,  355, 65,  50,  40,  262, 61,  75,  52,
        354, 339, 57,  119, 118, 74,  72,  232, 47,  41,  319, 292, 314, 78,  80,  48,
        333, 330, 276, 45,  76,  38,  122, 197, 68,  334, 67,  66,  328, 158, 90,  273,
        279, 106, 303, 79,  344, 277, 83,  318, 335, 299, 216, 141, 295, 53,  55,  325,
        323, 125, 324, 309, 302, 73,  289, 282, 227, 165, 304, 285, 92,  258, 188, 233,
        69,  288, 59,  231, 170, 58,  308, 56,  284, 313, 54,  320, 236, 164, 310, 300,
        163, 264, 296, 293, 133, 265, 260, 208, 71,  42,  89,  36,  209, 181, 195, 298,
        137, 82,  225, 287, 272, 268, 259, 267, 214, 217, 305, 283, 95,  294, 187, 224,
        131, 159, 230, 182, 196, 51,  274, 128, 218, 168, 87,  135, 177, 235, 219, 172,
        9,   167, 43,  278, 176, 63,  169, 189, 37,  179, 270, 263, 129, 234, 175, 269,
        146, 171, 160, 62,  150, 139, 226, 275, 123, 64,  156, 152, 290, 33,  239, 206,
        85,  178, 145, 315, 154, 151, 138, 215, 229, 120, 173, 251, 252, 253, 254, 255,
        60,  143, 162, 194, 149, 81,  200, 0,   1,   96,  213, 2,   3,   4,   191, 5,
        280, 161, 6,   7,   153, 88,  8,   11,  12,  157, 147, 13,  190, 210, 14,  15,
        16,  142, 17,  35,  199, 18,  134, 19,  94,  20,  205, 21,  22,  174, 23,  136,
        24,  211, 25,  126, 26,  204, 228, 27,  203, 28,  212, 29,  155, 34,  30,  31,
        220, 180, 127, 113, 130, 192, 193, 198, 221, 207, 237, 223, 86,  238, 241, 240,
        242, 222, 202, 243, 144, 185, 244, 140, 245, 166, 132, 246, 148, 247, 184, 186,
        248, 249, 183, 201, 250,
    ];
    let fvs_dest_path = std::path::Path::new(&std::env::var("OUT_DIR").unwrap()).join("MTF_VALUE_ARRAY.txt");
    let fis_dest_path = std::path::Path::new(&std::env::var("OUT_DIR").unwrap()).join("MTF_INDEX_ARRAY.txt");
    let fnext_dest_path  = std::path::Path::new(&std::env::var("OUT_DIR").unwrap()).join("MTF_NEXT_ARRAY.txt");
    let mut fvs = std::io::BufWriter::new(std::fs::File::create(&fvs_dest_path).unwrap());
    let mut fis = std::io::BufWriter::new(std::fs::File::create(&fis_dest_path).unwrap());
    let mut fnext  = std::io::BufWriter::new(std::fs::File::create(&fnext_dest_path).unwrap());

    write!(fvs, "{:?}", vs.iter().collect::<Vec<_>>()).unwrap();
    write!(fis, "{:?}", vs.iter().map(|v| vs.iter().position(|i| vs[*i] == *v).unwrap()).collect::<Vec<_>>()).unwrap();
    write!(fnext, "{:?}", (0 .. vs.len())
           .map(|i| std::cmp::min(255, (i as f64 * 0.9999).powf(1.0 - 0.05 * i as f64 / vs.len() as f64) as usize))
           .collect::<Vec<_>>()).unwrap();
}
