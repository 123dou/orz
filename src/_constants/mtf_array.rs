#![allow(dead_code)]

use std;
use std::io::Write;

pub fn generate() {
    let vs = [
        32,  115, 101, 356, 111, 97,  116, 350, 114, 110, 346, 105, 336, 341, 355, 104,
        326, 351, 108, 46,  39,  91,  99,  330, 331, 316, 335, 260, 325, 320, 340, 117,
        93,  109, 100, 321, 44,  98,  112, 345, 300, 124, 102, 107, 337, 315, 290, 10,
        103, 306, 121, 328, 310, 348, 311, 49,  352, 256, 342, 349, 347, 305, 280, 285,
        296, 265, 339, 270, 344, 77,  70,  84,  354, 65,  50,  40,  261, 61,  75,  52,
        353, 338, 57,  119, 118, 74,  72,  232, 47,  41,  318, 291, 313, 78,  80,  48,
        332, 329, 275, 45,  76,  38,  122, 197, 68,  333, 67,  66,  327, 158, 90,  272,
        278, 106, 302, 79,  343, 276, 83,  317, 334, 298, 216, 141, 294, 53,  55,  324,
        322, 125, 323, 308, 301, 73,  288, 281, 227, 165, 303, 284, 92,  257, 188, 233,
        69,  287, 59,  231, 170, 58,  307, 56,  283, 312, 54,  319, 236, 164, 309, 299,
        163, 263, 295, 292, 133, 264, 259, 208, 71,  42,  89,  36,  209, 181, 195, 297,
        137, 82,  225, 286, 271, 267, 258, 266, 214, 217, 304, 282, 95,  293, 187, 224,
        131, 159, 230, 182, 196, 51,  273, 128, 218, 168, 87,  135, 177, 235, 219, 172,
        9,   167, 43,  277, 176, 63,  169, 189, 37,  179, 269, 262, 129, 234, 175, 268,
        146, 171, 160, 62,  150, 139, 226, 274, 123, 64,  156, 152, 289, 33,  239, 206,
        85,  178, 145, 314, 154, 151, 138, 215, 229, 120, 173, 251, 252, 253, 254, 255,
        60,  143, 162, 194, 149, 81,  200, 0,   1,   96,  213, 2,   3,   4,   191, 5,
        279, 161, 6,   7,   153, 88,  8,   11,  12,  157, 147, 13,  190, 210, 14,  15,
        16,  142, 17,  35,  199, 18,  134, 19,  94,  20,  205, 21,  22,  174, 23,  136,
        24,  211, 25,  126, 26,  204, 228, 27,  203, 28,  212, 29,  155, 34,  30,  31,
        220, 180, 127, 113, 130, 192, 193, 198, 221, 207, 237, 223, 86,  238, 241, 240,
        242, 222, 202, 243, 144, 185, 244, 140, 245, 166, 132, 246, 148, 247, 184, 186,
        248, 249, 183, 201, 250,
    ];
    let fvs_dest_path = std::path::Path::new(&std::env::var("OUT_DIR").unwrap()).join("MTF_VALUE_ARRAY.txt");
    let fis_dest_path = std::path::Path::new(&std::env::var("OUT_DIR").unwrap()).join("MTF_INDEX_ARRAY.txt");
    let fnext_dest_path  = std::path::Path::new(&std::env::var("OUT_DIR").unwrap()).join("MTF_NEXT_ARRAY.txt");
    let mut fvs = std::io::BufWriter::new(std::fs::File::create(&fvs_dest_path).unwrap());
    let mut fis = std::io::BufWriter::new(std::fs::File::create(&fis_dest_path).unwrap());
    let mut fnext  = std::io::BufWriter::new(std::fs::File::create(&fnext_dest_path).unwrap());

    write!(fvs, "{:?}", vs.iter().collect::<Vec<_>>()).unwrap();
    write!(fis, "{:?}", vs.iter().map(|v| vs.iter().position(|i| vs[*i] == *v).unwrap()).collect::<Vec<_>>()).unwrap();
    write!(fnext, "{:?}", (0 .. vs.len())
           .map(|i| std::cmp::min(255, (i as f64 * 0.9999).powf(1.0 - 0.05 * i as f64 / vs.len() as f64) as usize))
           .collect::<Vec<_>>()).unwrap();
}
