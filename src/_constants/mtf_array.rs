#![allow(dead_code)]

use std;
use std::io::Write;

pub fn generate() {
    let vs = [
        32,  101, 356, 115, 111, 105, 97,  360, 350, 361, 336, 114, 355, 351, 108, 116,
        346, 110, 331, 46,  39,  260, 99,  100, 341, 91,  117, 93,  340, 330, 326, 104,
        335, 44,  112, 345, 103, 320, 98,  325, 352, 316, 357, 321, 109, 124, 300, 102,
        347, 315, 310, 107, 121, 280, 256, 358, 290, 306, 359, 354, 353, 84,  285, 265,
        118, 295, 45,  348, 49,  48,  301, 305, 349, 83,  270, 311, 276, 328, 77,  286,
        65,  296, 68,  10,  79,  119, 40,  41,  47,  50,  54,  58,  344, 324, 333, 327,
        343, 338, 75,  82,  318, 299, 329, 61,  334, 197, 266, 342, 72,  56,  307, 69,
        80,  106, 257, 66,  73,  275, 258, 59,  53,  309, 339, 141, 323, 123, 317, 67,
        337, 313, 319, 312, 278, 74,  332, 322, 261, 271, 195, 57,  78,  120, 291, 196,
        281, 298, 268, 302, 292, 70,  52,  92,  262, 282, 279, 55,  122, 76,  297, 232,
        264, 269, 125, 95,  71,  288, 227, 277, 259, 37,  182, 170, 287, 51,  229, 81,
        272, 158, 133, 314, 87,  42,  38,  230, 217, 35,  89,  85,  165, 175, 151, 88,
        283, 163, 179, 274, 168, 153, 263, 226, 146, 289, 304, 33,  308, 156, 293, 135,
        294, 60,  208, 174, 144, 164, 128, 162, 145, 161, 150, 143, 233, 86,  188, 113,
        176, 129, 134, 216, 240, 177, 284, 225, 303, 209, 185, 267, 159, 181, 228, 239,
        148, 152, 212, 62,  214, 154, 171, 131, 236, 126, 140, 204, 215, 184, 142, 194,
        273, 147, 63,  224, 36,  178, 183, 218, 132, 220, 25,  138, 6,   172, 14,  157,
        207, 180, 7,   202, 213, 160, 96,  206, 94,  13,  231, 1,   219, 2,   203, 29,
        210, 186, 187, 166, 90,  155, 167, 190, 189, 211, 199, 237, 23,  191, 18,  136,
        139, 30,  173, 26,  12,  21,  222, 255, 200, 24,  137, 201, 205, 22,  3,   251,
        252, 193, 254, 223, 19,  253, 192, 221, 11,  27,  169, 5,   245, 198, 34,  244,
        64,  43,  249, 242, 8,   28,  246, 238, 243, 130, 16,  31,  0,   250, 241, 15,
        4,   127, 248, 9,   247, 17,  234, 149, 235, 20
    ];
    let fvs_dest_path = std::path::Path::new(&std::env::var("OUT_DIR").unwrap()).join("MTF_VALUE_ARRAY.txt");
    let fis_dest_path = std::path::Path::new(&std::env::var("OUT_DIR").unwrap()).join("MTF_INDEX_ARRAY.txt");
    let fnext_dest_path  = std::path::Path::new(&std::env::var("OUT_DIR").unwrap()).join("MTF_NEXT_ARRAY.txt");
    let mut fvs = std::io::BufWriter::new(std::fs::File::create(&fvs_dest_path).unwrap());
    let mut fis = std::io::BufWriter::new(std::fs::File::create(&fis_dest_path).unwrap());
    let mut fnext  = std::io::BufWriter::new(std::fs::File::create(&fnext_dest_path).unwrap());

    write!(fvs, "{:?}", vs.iter().collect::<Vec<_>>()).unwrap();
    write!(fis, "{:?}", vs.iter().map(|v| vs.iter().position(|i| vs[*i] == *v).unwrap()).collect::<Vec<_>>()).unwrap();
    write!(fnext, "{:?}", (0 .. vs.len())
           .map(|i| std::cmp::min(255, (i as f64 * 0.9999).powf(1.0 - 0.08 * i as f64 / vs.len() as f64) as usize))
           .collect::<Vec<_>>()).unwrap();
}
